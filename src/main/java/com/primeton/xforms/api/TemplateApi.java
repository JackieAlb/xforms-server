/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.primeton.xforms.api;


import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.primeton.xforms.model.Response;
import com.primeton.xforms.model.Template;

import java.util.List;

import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-09-05T16:51:09.815+08:00")

@Api(value = "template")
public interface TemplateApi {

    @ApiOperation(value = "模板类别列表", notes = "增加一个新的表单模板", response = Response.class, tags={ "template" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功返回", response = Response.class),
        @ApiResponse(code = 404, message = "哥们，我找不到你要的东西！", response = Response.class),
        @ApiResponse(code = 405, message = "你请求的输入值有问题吧？", response = Response.class),
        @ApiResponse(code = 500, message = "服务器受到外星人攻击！正在抢修中……", response = Response.class) })
    
    @RequestMapping(value = "/template",
        produces = { "application/json"}, 
        method = RequestMethod.POST)
    ResponseEntity<Response> addFormTemplate(@ApiParam(value = "Template object that need to be added" ,required=true )  @Valid @RequestBody Template template);


    @ApiOperation(value = "模板类别列表", notes = "更新一个表单模板", response = Template.class, tags={ "template" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "操作成功", response = Template.class) })
    
    @RequestMapping(value = "/template",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Template>> queryFormTemplate(@ApiParam(value = "Template object that need to be added" ,required=true )  @Valid @RequestBody Template template);


    @ApiOperation(value = "模板类别列表", notes = "更新一个表单模板", response = Response.class, tags={ "template"})
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功返回", response = Response.class),
        @ApiResponse(code = 404, message = "哥们，我找不到你要的东西！", response = Response.class),
        @ApiResponse(code = 405, message = "你请求的输入值有问题吧？", response = Response.class),
        @ApiResponse(code = 500, message = "服务器受到外星人攻击！正在抢修中……", response = Response.class) })
    
    @RequestMapping(value = "/template",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Response> updateFormTemplate(@ApiParam(value = "Template object that need to be added" ,required=true )  @Valid @RequestBody Template template);

}
